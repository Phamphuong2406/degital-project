// <auto-generated />
using System;
using DigitalProject.Entitys;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250723084842_updateEntityRequest")]
    partial class updateEntityRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DigitalProject.Entitys.ContactRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CustomerMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustommerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RespondentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RequestId");

                    b.HasIndex("RespondentId");

                    b.ToTable("ContactRequests", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Displayorder")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("GalleryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PosterId")
                        .HasColumnType("int");

                    b.HasKey("GalleryId");

                    b.HasIndex("PosterId");

                    b.ToTable("Gallerys", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ConstructionEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ConstructionStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DetailedDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("DisplayOnHeader")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DisplayOnhome")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DisplayOrderOnHeader")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrderOnHome")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationTimeOnHeader")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPoster")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("PostedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Shortdescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("architect")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("structuralEngineer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ProjectId");

                    b.HasIndex("IdPoster");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("RefreshTokenExpired")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("note")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("DigitalProject.Entitys.ContactRequest", b =>
                {
                    b.HasOne("DigitalProject.Entitys.User", "users")
                        .WithMany("contactRequests")
                        .HasForeignKey("RespondentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("users");
                });

            modelBuilder.Entity("DigitalProject.Entitys.Gallery", b =>
                {
                    b.HasOne("DigitalProject.Entitys.User", "users")
                        .WithMany("galleries")
                        .HasForeignKey("PosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("DigitalProject.Entitys.Project", b =>
                {
                    b.HasOne("DigitalProject.Entitys.User", "users")
                        .WithMany("projects")
                        .HasForeignKey("IdPoster")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("DigitalProject.Entitys.UserRole", b =>
                {
                    b.HasOne("DigitalProject.Entitys.Role", "roles")
                        .WithMany("userRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalProject.Entitys.User", "users")
                        .WithMany("userRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");

                    b.Navigation("users");
                });

            modelBuilder.Entity("DigitalProject.Entitys.Role", b =>
                {
                    b.Navigation("userRoles");
                });

            modelBuilder.Entity("DigitalProject.Entitys.User", b =>
                {
                    b.Navigation("contactRequests");

                    b.Navigation("galleries");

                    b.Navigation("projects");

                    b.Navigation("userRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
